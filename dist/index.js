#!/usr/bin/env node
var e;import{dirname as t}from"path";import{argv as s,exit as o,version as i}from"process";import{fileURLToPath as l}from"url";import{ReadJson as a}from"@yangzw/bruce-us/dist/node.js";import{Command as n}from"commander";import p from"semver";import{ACTION_TEXT as r,ACTION_OPTS_TEXT as m,CMD_TEXT as d}from"./langs/index.js";import{Build as c,Create as u,Dev as v,Init as O,Locale as f,Remove as b}from"./libs/index.js";import{BUILD_TEST as y,CREATE_TEXT as j,DEV_TEST as h,INIT_TEST as C}from"./utils/index.js";p.lt(i,"v16.0.0")&&(console.log(d.judgeNode),o(1));const g=new n,H=t(l(import.meta.url)),{version:N="1.0.0"}=null!==(e=a("../package.json",H))&&void 0!==e?e:{};g.name(d.cmd).usage("<command> [option]").description(d.desc).version(d.version(N),"-v, --version",r.version).helpOption("-h, --help",r.help).addHelpCommand(!1),g.command("build").alias("b").option("-a, --analyze [val]",m.buildOpts.useAnalyzer,y.useAnalyzer,!1).option("-c, --compress [val]",m.buildOpts.useCompressor,y.useCompressor,!1).option("-lc, --lintcss [val]",m.buildOpts.useCsslint,y.useCsslint,!1).option("-lj, --lintjs [val]",m.buildOpts.useJslint,y.useJslint,!1).option("-m, --mode [val]",m.buildOpts.mode,y.mode,"").option("-n, --named [val]",m.buildOpts.useHash,y.useHash,!1).option("-p, --polyfill [val]",m.buildOpts.polyfill,y.polyfill,"").option("-t, --timed [val]",m.buildOpts.useTimer,y.useTimer,!1).description(r.build).action(c),g.command("create").alias("c").option("-f, --frame [val]",m.createOpts.frame,j.frame,"").option("-i, --install [val]",m.createOpts.useInstaller,j.useInstaller,!1).option("-n, --name [val]",m.createOpts.appName,j.appName,"").option("-s, --style [val]",m.createOpts.style,j.style,"").option("-ts, --typescript [val]",m.createOpts.useTs,j.useTs,!1).description(r.create).action(u),g.command("dev").alias("d").option("-e, --encrypt [val]",m.devOpts.useHttps,h.useHttps,!1).option("-lc, --lintcss [val]",m.devOpts.useCsslint,h.useCsslint,!1).option("-lj, --lintjs [val]",m.devOpts.useJslint,h.useJslint,!1).option("-o, --open [val]",m.devOpts.useOpener,h.useOpener,!1).option("-p, --port [val]",m.devOpts.port,h.port,0).description(r.dev).action(v),g.command("init").alias("i").option("-n, --name [val]",m.initOpts.mateName,C.mateName,"").option("-t, --template [val]",m.initOpts.template,C.template,"").description(r.init).action(O),g.command("locale").alias("l").description(r.locale).action(f),g.command("remove").alias("r").description(r.remove).action(b),g.parse(s);