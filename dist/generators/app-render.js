import{readFileSync as ae,renameSync as ss,writeFileSync as ce}from"fs";import{dirname as e}from"path";import{fileURLToPath as i}from"url";import{AbsPath as $,CopyDir as es,CreateDir as rs,ReadJson as l}from"@yangzw/bruce-us/dist/node.js";import{JudgeFile as H}from"../utils/index.js";const h=e(i(import.meta.url));function ns({name:s="unknown"}={}){es({dist:`${s}/src/assets`,src:"../assets/asset",srcDir:h})}function cs({ext:s="js",frame:e="js",name:r="unknown",style:n="scss",useTs:c=!1}={}){const t=$(`../assets/config/brucerc.${s}`,h),a=$(`${r}/brucerc.${s}`),o=ae(t,"utf8");let i="";"js"===s||"ts"===s?i=o.replace(/frame: "js"/g,`frame: "${e}"`).replace(/style: "scss"/g,`style: "${n}"`).replace(/useTs: false/g,`useTs: ${c}`):"json"===s?i=o.replace(/"frame": "js"/g,`"frame": "${e}"`).replace(/"style": "scss"/g,`"style": "${n}"`).replace(/"useTs": false/g,`"useTs": ${c}`):"yaml"===s&&(i=o.replace(/frame: "js"/g,`frame: ${e}`).replace(/style: "scss"/g,`style: ${n}`).replace(/useTs: FALSE/g,`useTs: ${c.toString().toUpperCase()}`)),ce(a,i,"utf8")}function ts({deps:s={},devdeps:e={},name:r="unknown"}={}){const n={name:r,version:"1.0.0",description:"",keywords:[],type:"module",scripts:{build:"bruce-app b -lc -lj -m test","build:pre":"bruce-app b -lc -lj -m pre","build:prod":"bruce-app b -lc -lj",dev:"bruce-app d -e -lc -lj -o"},config:{},engines:{node:">=18.0.0",npm:">=8.6.0"},dependencies:s,devDependencies:e,license:"MIT"},c=$(`${r}/package.json`),t=JSON.stringify(n,null,"\t");ce(c,t,"utf8")}function as({frame:s="js",name:e="unknown",style:r="scss",useTs:n=!1}={}){es({dist:`${e}/src`,src:`../assets/app/${s}${n?"-ts":""}`,srcDir:h});const c=H(`${e}/src`),t=H(`${e}/src/views/home`),a=H(`${e}/src/views/about`);("react"===s?[c,t,a]:[c]).forEach((s=>{const e=ae(s,"utf8").replace(/scss/g,r);ce(s,e,"utf8")}));const o=$(`${e}/src/index.scss`),i=$(`${e}/src/views/home/index.scss`),l=$(`${e}/src/views/about/index.scss`);("react"===s?[o,i,l]:[o]).forEach((s=>{const e=s.replace(/scss$/g,r);ss(s,e)}))}function os({ext:s="js",frame:e="js",name:r="unknown",useTs:n=!1}={}){var c;if(!n)return;const t=`${r}/tsconfig.json`;es({dist:t,src:"../assets/config/codeconfig.json",srcDir:h});const a=null!==(c=l(t))&&void 0!==c?c:{compilerOptions:{jsx:"preserve"},include:[]};"react"===e&&(a.compilerOptions.jsx="react"),"ts"===s&&(a.include=[...a.include,"brucerc.ts"]),ce($(t),JSON.stringify(a,null,"\t"),"utf8")}export default function is({deps:s={},devdeps:e={},ext:r="js",frame:n="js",name:c="unknown",style:t="scss",useTs:a=!1}={}){rs(`${c}/src`),as({frame:n,name:c,style:t,useTs:a}),ns({name:c}),cs({ext:r,frame:n,name:c,style:t,useTs:a}),ts({deps:s,devdeps:e,name:c}),os({ext:r,frame:n,name:c,useTs:a})}