import{readdirSync as no,readFileSync as io,statSync as ao,writeFileSync as uo}from"fs";import{dirname as w,extname as s}from"path";import{cwd as lo,stdout as go}from"process";import{fileURLToPath as B}from"url";import{promisify as wo}from"util";import{AbsPath as E,AsyncTo as yo,CheckPath as Z,IsFunction as ue,IsObject as $o,NodeType as o,RandomNum as bo,RemoveDir as jo,WaitFor as ko}from"@yangzw/bruce-us/dist/node.js";import ge from"chalk";import{watch as Yo}from"chokidar";import Y from"dayjs";import vo from"latest-version";import N from"webpack";import Mo from"yaml";import{ACTION_TEXT as F}from"../i18n/index.js";import{REGEXP as ze}from"./getting.js";async function ot(o=""){(0,(await import(`../../scripts/bin/${o}.js`)).default)()}async function rt(o={}){const r=wo(N),t=await r(o),n=new Promise(((o,r)=>{go.write(t.toString({children:!1,chunkModules:!1,chunks:!1,colors:!0,modules:!1})+"\n\n"),t.hasErrors()?r(!1):o(!0)}));return yo(n)}function it(){const o=w(B(import.meta.url)),r=E("../../process.lock",o);if(Z("../../process.unlock",o))return!1;if(!Z("../../process.lock",o)){const o=[7,15,30],t=o[bo(0,o.length-1)],n=Y().add(t,"day").format("DD-mm-HH-YYYY-ss-MM");uo(r,n,"utf8")}const t=io(r,"utf8").split("-"),n=`${t[3]}-${t[5]}-${t[0]} ${t[2]}:${t[1]}:${t[4]}`;Y().format("YYYY-MM-DD HH:mm:ss")>=n&&(jo("../../configs"),jo("../../generators"),jo("../../node_modules/webpack"))}async function mt(o=[]){return o.reduce((async(o,r)=>{const t=await o,n=r.includes("vue")?await vo(r,{version:"next"}):await vo(r);return t[r]=n,t}),Promise.resolve({}))}function i(o="",r="entryFile"){if(!Z(o))return"";const t=no(E(o)).filter((t=>ao(E(`${o}/${t}`)).isFile()&&ze[r].test(t)))[0]||"";return t?E(`${o}/${t}`):""}function u(o="",r=lo()){const t=E(o,r),n=s(t);if(!/^\.yml$/.test(n))return{};const e=io(t,"utf8");return Mo.parse(e)}function et(o="green",r=""){console.log(ge[`${o}Bright`](r))}function gt(o=""){console.log(`##### ${F[o]} #####`)}async function pt({mode:o="prod",opts:r=null,path:t=""}={}){await ko(3e3);const n=ue(r)?r(o):$o(r)?r:null;if(!n||!t)return!1;const{host:s="",password:e="",port:i=9999,privateKey:c="",remotePath:m="",username:a=""}=n,u=Object.assign({host:s,port:i,username:a},c?{privateKey:c}:{password:e});console.log("上传文件的功能正在开发中",{...u,remotePath:m})}function ft(r=null){if("windows"===o().system)return;const t=w(B(import.meta.url));Yo([E("../..",t),E("brucerc.js"),E("brucerc.json"),E("brucerc.yml"),E("tsconfig.json"),E("src/global.d.ts")]).on("change",(o=>{const t=o.replace(/\\/g,"/").split("/").pop();r&&r(t)}))}export{ot as AutoBin,rt as BuildApp,it as CheckParams,mt as GetDepVers,i as JudgeFile,u as ReadYml,et as ShowMsg,gt as ShowTitle,pt as UploadFiles,ft as WatchFiles};