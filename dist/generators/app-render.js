import{readFileSync as tt,renameSync as ss,writeFileSync as st}from"fs";import{dirname as t}from"path";import{fileURLToPath as l}from"url";import{AbsPath as S,CopyDir as es,CreateDir as rs,ReadJson as a}from"@yangzw/bruce-us/dist/node.js";import{JudgeFile as V}from"../utils/index.js";const H=t(l(import.meta.url));function cs({name:s="unknown"}={}){es({dist:`${s}/src/assets`,src:"../assets/asset",srcDir:H})}function ns({ext:s="js",frame:e="js",name:r="unknown",style:c="scss",useTs:n=!1}={}){const t=S(`../assets/config/brucerc.${s}`,H),a=S(`${r}/brucerc.${s}`),o=tt(t,"utf8");let i="";"js"===s||"ts"===s?i=o.replace(/frame: "js"/g,`frame: "${e}"`).replace(/style: "scss"/g,`style: "${c}"`).replace(/useTs: false/g,`useTs: ${n}`):"json"===s?i=o.replace(/"frame": "js"/g,`"frame": "${e}"`).replace(/"style": "scss"/g,`"style": "${c}"`).replace(/"useTs": false/g,`"useTs": ${n}`):"yaml"===s&&(i=o.replace(/frame: "js"/g,`frame: ${e}`).replace(/style: "scss"/g,`style: ${c}`).replace(/useTs: FALSE/g,`useTs: ${n.toString().toUpperCase()}`)),st(a,i,"utf8")}function ts({deps:s={},devdeps:e={},name:r="unknown"}={}){const c={name:r,version:"1.0.0",description:"",keywords:[],type:"module",scripts:{build:"bruce-app b -lc -lj -m test","build:pre":"bruce-app b -lc -lj -m pre","build:prod":"bruce-app b -lc -lj",dev:"bruce-app d -e -lc -lj -o"},config:{},engines:{node:">=18.0.0",npm:">=8.6.0"},dependencies:s,devDependencies:e,license:"MIT"},n=S(`${r}/package.json`),t=JSON.stringify(c,null,"\t");st(n,t,"utf8")}function as({frame:s="js",name:e="unknown",style:r="scss",useTs:c=!1}={}){es({dist:`${e}/src`,src:`../assets/app/${s}${c?"-ts":""}`,srcDir:H});const n=V(`${e}/src`),t=V(`${e}/src/views/home`),a=V(`${e}/src/views/about`);("react"===s?[n,t,a]:[n]).forEach((s=>{const e=tt(s,"utf8").replace(/scss/g,r);st(s,e,"utf8")}));const o=S(`${e}/src/index.scss`),i=S(`${e}/src/views/home/index.scss`),u=S(`${e}/src/views/about/index.scss`);("react"===s?[o,i,u]:[o]).forEach((s=>{const e=s.replace(/scss$/g,r);ss(s,e)}))}function os({ext:s="js",frame:e="js",name:r="unknown",useTs:c=!1}={}){var n;if(!c)return;const t=`${r}/tsconfig.json`;es({dist:t,src:"../assets/config/codeconfig.json",srcDir:H});const o=null!==(n=a(t))&&void 0!==n?n:{compilerOptions:{jsx:"preserve"},include:[]};"react"===e&&(o.compilerOptions.jsx="react"),"ts"===s&&(o.include=[...o.include,"brucerc.ts"]),st(S(t),JSON.stringify(o,null,"\t"),"utf8")}export default function is({deps:s={},devdeps:e={},ext:r="js",frame:c="js",name:n="unknown",style:t="scss",useTs:a=!1}={}){rs(`${n}/src`),as({frame:c,name:n,style:t,useTs:a}),cs({name:n}),ns({ext:r,frame:c,name:n,style:t,useTs:a}),ts({deps:s,devdeps:e,name:n}),os({ext:r,frame:c,name:n,useTs:a})}