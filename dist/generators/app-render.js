import{readFileSync as le,renameSync as ss,writeFileSync as ue}from"fs";import{dirname as s}from"path";import{fileURLToPath as i}from"url";import{AbsPath as $,CopyDir as es,CreateDir as ns,ReadJson as l}from"@yangzw/bruce-us/dist/node.js";import{JudgeFile as k}from"../utils/index.js";const E=s(i(import.meta.url));function rs({name:s="unknown"}={}){es({dist:`${s}/src/assets`,src:"../assets/asset",srcDir:E})}function ts({ext:s="js",frame:e="js",name:n="unknown",style:r="scss",useTs:t=!1}={}){const c=$(`../assets/config/brucerc.${s}`,E),a=$(`${n}/brucerc.${s}`),o=le(c,"utf8");let i="";"js"===s||"ts"===s?i=o.replace(/frame: "js"/g,`frame: "${e}"`).replace(/style: "scss"/g,`style: "${r}"`).replace(/useTs: false/g,`useTs: ${t}`):"json"===s?i=o.replace(/"frame": "js"/g,`"frame": "${e}"`).replace(/"style": "scss"/g,`"style": "${r}"`).replace(/"useTs": false/g,`"useTs": ${t}`):"yaml"===s&&(i=o.replace(/frame: "js"/g,`frame: ${e}`).replace(/style: "scss"/g,`style: ${r}`).replace(/useTs: FALSE/g,`useTs: ${t.toString().toUpperCase()}`)),ue(a,i,"utf8")}function cs({deps:s={},devdeps:e={},name:n="unknown"}={}){const r={name:n,version:"1.0.0",description:"",keywords:[],type:"module",engines:{node:">=16.0.0",npm:">=7.10.0"},dependencies:s,devDependencies:e,license:"MIT"},t=$(`${n}/package.json`),c=JSON.stringify(r,null,"\t");ue(t,c,"utf8")}function as({frame:s="js",name:e="unknown",style:n="scss",useTs:r=!1}={}){es({dist:`${e}/src`,src:`../assets/app/${s}${r?"-ts":""}`,srcDir:E});const t=k(`${e}/src`),c=k(`${e}/src/views/home`),a=k(`${e}/src/views/about`);("react"===s?[t,c,a]:[t]).forEach((s=>{const e=le(s,"utf8").replace(/scss/g,n);ue(s,e,"utf8")}));const o=$(`${e}/src/index.scss`),i=$(`${e}/src/views/home/index.scss`),u=$(`${e}/src/views/about/index.scss`);("react"===s?[o,i,u]:[o]).forEach((s=>{const e=s.replace(/scss$/g,n);ss(s,e)}))}function os({ext:s="js",frame:e="js",name:n="unknown",useTs:r=!1}={}){var t;if(!r)return;const c=`${n}/tsconfig.json`;es({dist:c,src:"../assets/config/codeconfig.json",srcDir:E});const a=null!==(t=l(c))&&void 0!==t?t:{compilerOptions:{jsx:"preserve"},include:[]};"react"===e&&(a.compilerOptions.jsx="react"),"ts"===s&&(a.include=[...a.include,"brucerc.ts"]),ue($(c),JSON.stringify(a,null,"\t"),"utf8")}export default function is({deps:s={},devdeps:e={},ext:n="js",frame:r="js",name:t="unknown",style:c="scss",useTs:a=!1}={}){ns(`${t}/src`),as({frame:r,name:t,style:c,useTs:a}),rs({name:t}),ts({ext:n,frame:r,name:t,style:c,useTs:a}),cs({deps:s,devdeps:e,name:t}),os({ext:n,frame:r,name:t,useTs:a})}